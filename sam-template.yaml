AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: PII replacement service

Parameters:
  SourceBucketName:
    Type: String

Resources:
  ## S3 bucket
  SourceBucket:
    Type: AWS::S3::Bucket
    DependsOn:
      - PIISubstituterQueuePolicy   
    Properties:
      BucketName: !Ref SourceBucketName 
      NotificationConfiguration:
        QueueConfigurations:
          - Event: "s3:ObjectCreated:*"
            Queue: !GetAtt PIISubstituterQueue.Arn
            Filter: 
              S3Key:
                Rules:
                  - Name: prefix
                    Value: 'output/' 
                  - Name: suffix
                    Value: '.out'    

  TranscribeEventBridgeRole:
    Type: 'AWS::IAM::Role'
    Properties:
      RoleName: MyEventBridgeRole
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service: events.amazonaws.com
            Action: 'sts:AssumeRole'
      ManagedPolicyArns:
        - 'arn:aws:iam::aws:policy/AmazonEventBridgeFullAccess'
      Policies:
        - PolicyName: InvokeLambdaFunction
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action: 'lambda:InvokeFunction'
                Resource: !GetAtt TranscribeCompletedFunction.Arn

  TranscribeRole:  
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - transcribe.amazonaws.com
            Action:
              - sts:AssumeRole
      Path: /
      Policies:
        - PolicyName: s3
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Action:
                  - s3:*
                Resource:
                  - !Join ["", ["arn:aws:s3:::",!Ref SourceBucketName]]
                  - !Join ["", ["arn:aws:s3:::",!Ref SourceBucketName,"/*"]]

  ComprehendRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - comprehend.amazonaws.com
            Action:
              - sts:AssumeRole
      Path: /
      Policies:
        - PolicyName: s3
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Action:
                  - s3:*
                Resource:
                  - !Join ["", ["arn:aws:s3:::",!Ref SourceBucketName]]
                  - !Join ["", ["arn:aws:s3:::",!Ref SourceBucketName,"/*"]]

  PIILambdaExecutionRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - lambda.amazonaws.com
            Action:
              - sts:AssumeRole
      Path: /
      Policies:
        - PolicyName: s3
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Action:
                  - s3:*
                Resource:
                  - arn:aws:s3:::piidataoutput
                  - arn:aws:s3:::piidataoutput/*
                  - !Join ["", ["arn:aws:s3:::",!Ref SourceBucketName]]
                  - !Join ["", ["arn:aws:s3:::",!Ref SourceBucketName,"/*"]]
        - PolicyName: lambda_basic_execution
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Action:
                  - logs:CreateLogGroup
                  - logs:CreateLogStream
                  - logs:PutLogEvents
                Resource:
                  !Sub
                    - arn:aws:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/${AWS::StackName}-${LambdaFunctionName}:*
                    - { LambdaFunctionName: '*' }
        - PolicyName: sqs
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Action:
                  - sqs:DeleteMessage
                  - sqs:GetQueueAttributes
                  - sqs:ReceiveMessage
                Resource: !GetAtt PIISubstituterQueue.Arn
        - PolicyName: kms
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Action:
                  - kms:*
                Resource: "*"
        - PolicyName: sns
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Action:
                  - sns:Publish
                Resource:
                  - 'arn:aws:sns:us-east-2:*:*'
        - PolicyName: comprehend
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Action:
                  - comprehend:*
                Resource:
                  - "*"
        - PolicyName: iampassrole
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Action:
                  - iam:passrole
                Resource:
                  - !GetAtt ComprehendRole.Arn
                  - !GetAtt TranscribeRole.Arn
        - PolicyName: transcribe
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Action:
                  - transcribe:*
                Resource:
                  - "*"
      RoleName:
        !Sub
          - ${AWS::StackName}-${ExecutionRoleName}
          - { ExecutionRoleName: ComprehendTranscribeRole }

  PIIExtractionFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: start-pii-extraction/
      Environment:
        Variables:
          COMPREHEND_ROLE: !GetAtt ComprehendRole.Arn
      FunctionName:
        !Sub
        - ${AWS::StackName}-${LambdaFunctionName}
        - { LambdaFunctionName: PIIExtractionFunction }
      Handler: app.lambda_handler
      Role:
        !GetAtt
        - PIILambdaExecutionRole
        - Arn
      MemorySize: 128
      Runtime: python3.9
      Timeout: 30

  ## Lambda function
  ComprehendPIIResultsFunction:
    Type: AWS::Serverless::Function 
    Properties:
      CodeUri: comprehend-results-processor
      FunctionName:
        !Sub
        - ${AWS::StackName}-${LambdaFunctionName}
        - { LambdaFunctionName: ComprehendPIIResultsFunction }
      Handler: app.lambda_handler
      Runtime: python3.9
      MemorySize: 512
      EphemeralStorage: 
        Size: 10240
      Environment:
        Variables:
          SOURCE_BUCKETNAME: !Ref SourceBucketName            
      Role:
        !GetAtt
        - PIILambdaExecutionRole
        - Arn
      Events:
        MySQSEvent:
          Type: SQS
          Properties:
            Queue: !GetAtt PIISubstituterQueue.Arn

  TranscribeAudioFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: stt-processing/
      FunctionName:
        !Sub
        - ${AWS::StackName}-${LambdaFunctionName}
        - { LambdaFunctionName: TranscribeAudioFunction }
      Handler: app.lambda_handler
      Runtime: python3.9
      MemorySize: 512
      EphemeralStorage: 
        Size: 10240
      Environment:
        Variables:
          TRANSCRIBE_ROLE: !GetAtt TranscribeRole.Arn
      Role:
        !GetAtt
        - PIILambdaExecutionRole
        - Arn

  TranscribeCompletedFunction:
    Type: 'AWS::Serverless::Function'
    Properties:
      CodeUri: transcribe-completed/
      Handler: app.lambda_handler
      Runtime: python3.9
  
  TranscribeCompletedEventBridgeRule:
    Type: AWS::Events::Rule
    Properties:
      EventPattern:
        source:
          - aws.transcribe
        detail-type:
          - Transcribe Job State Change
        detail:
          TranscriptionJobStatus:
          - COMPLETED
      Targets:
        - Arn: !GetAtt TranscribeCompletedFunction.Arn
          Id: TranscribeCompletedFunctionTarget

  ## SQS Queue
  PIISubstituterQueue:
    Type: "AWS::SQS::Queue"
    Properties:
      QueueName: PII-Substituter-Lambda-Queue

  ## Policies
  PIISubstituterQueuePolicy:
    Type: "AWS::SQS::QueuePolicy"
    Properties:
      PolicyDocument:
        Version: "2012-10-17"
        Id: QueuePolicy
        Statement:
          - Sid: Allow-SendMessage-To-Queue-From-S3-Event-Notification
            Effect: Allow
            Principal: 
              Service: "s3.amazonaws.com"
            Action:
              - "sqs:SendMessage"
            Resource: !GetAtt PIISubstituterQueue.Arn
            Condition:
              ArnLike:
                aws:SourceArn: !Join ["",['arn:aws:s3:::',!Ref SourceBucketName]]
              StringEquals:
                aws:SourceAccount: !Ref AWS::AccountId
      Queues:
        - Ref: PIISubstituterQueue

Outputs:
  SourceBucketName:
    Value: !Ref SourceBucketName
    Description: S3 Bucket for object storage
